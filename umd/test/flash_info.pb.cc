// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flash_info.proto

#include "flash_info.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace flash
{
class FlashCmdPktDefaultTypeInternal
{
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<FlashCmdPkt> _instance;
} _FlashCmdPkt_default_instance_;
}  // namespace flash
namespace protobuf_flash_5finfo_2eproto
{
static void InitDefaultsFlashCmdPkt()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    {
        void* ptr = &::flash::_FlashCmdPkt_default_instance_;
        new (ptr)::flash::FlashCmdPkt();
        ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
    }
    ::flash::FlashCmdPkt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FlashCmdPkt = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFlashCmdPkt}, {}};

void InitDefaults() { ::google::protobuf::internal::InitSCC(&scc_info_FlashCmdPkt.base); }

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flash::FlashCmdPkt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flash::FlashCmdPkt, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flash::FlashCmdPkt, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flash::FlashCmdPkt, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flash::FlashCmdPkt, cs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, sizeof(::flash::FlashCmdPkt)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(&::flash::_FlashCmdPkt_default_instance_),
};

void protobuf_AssignDescriptors()
{
    AddDescriptors();
    AssignDescriptors("flash_info.proto", schemas, file_default_instances, TableStruct::offsets, file_level_metadata,
                      file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce()
{
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&)
{
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl()
{
    InitDefaults();
    static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\020flash_info.proto\022\005flash\"[\n\013FlashCmdPkt"
        "\022\037\n\004type\030\001 \001(\0162\021.flash.PacketType\022\014\n\004dat"
        "a\030\002 \001(\014\022\021\n\tattribute\030\003 \001(\004\022\n\n\002cs\030\004 \001(\010*\251"
        "\001\n\nPacketType\022\014\n\010kCtrlOut\020\000\022\013\n\007kCtrlIn\020\001"
        "\022\014\n\010kBulkOut\020\002\022\013\n\007kBulkIn\020\003\022\020\n\014kAttrPowe"
        "rOn\020\004\022\021\n\rkAttrPowerOff\020\005\022\024\n\020kAttrPowerCo"
        "nfig\020\006\022\027\n\023kAttrGetPowerConfig\020\007\022\021\n\rkAttr"
        "ShutDown\020\010b\006proto3"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 298);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("flash_info.proto", &protobuf_RegisterTypes);
}

void AddDescriptors()
{
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer
{
    StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
}  // namespace protobuf_flash_5finfo_2eproto
namespace flash
{
const ::google::protobuf::EnumDescriptor* PacketType_descriptor()
{
    protobuf_flash_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_flash_5finfo_2eproto::file_level_enum_descriptors[0];
}
bool PacketType_IsValid(int value)
{
    switch (value)
    {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
            return true;
        default:
            return false;
    }
}

// ===================================================================

void FlashCmdPkt::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlashCmdPkt::kTypeFieldNumber;
const int FlashCmdPkt::kDataFieldNumber;
const int FlashCmdPkt::kAttributeFieldNumber;
const int FlashCmdPkt::kCsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlashCmdPkt::FlashCmdPkt() : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
    ::google::protobuf::internal::InitSCC(&protobuf_flash_5finfo_2eproto::scc_info_FlashCmdPkt.base);
    SharedCtor();
    // @@protoc_insertion_point(constructor:flash.FlashCmdPkt)
}
FlashCmdPkt::FlashCmdPkt(const FlashCmdPkt& from) : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.data().size() > 0)
    {
        data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    ::memcpy(&type_, &from.type_,
             static_cast<size_t>(reinterpret_cast<char*>(&attribute_) - reinterpret_cast<char*>(&type_)) +
                 sizeof(attribute_));
    // @@protoc_insertion_point(copy_constructor:flash.FlashCmdPkt)
}

void FlashCmdPkt::SharedCtor()
{
    data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&type_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&attribute_) - reinterpret_cast<char*>(&type_)) +
                 sizeof(attribute_));
}

FlashCmdPkt::~FlashCmdPkt()
{
    // @@protoc_insertion_point(destructor:flash.FlashCmdPkt)
    SharedDtor();
}

void FlashCmdPkt::SharedDtor() { data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited()); }

void FlashCmdPkt::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* FlashCmdPkt::descriptor()
{
    ::protobuf_flash_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_flash_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlashCmdPkt& FlashCmdPkt::default_instance()
{
    ::google::protobuf::internal::InitSCC(&protobuf_flash_5finfo_2eproto::scc_info_FlashCmdPkt.base);
    return *internal_default_instance();
}

void FlashCmdPkt::Clear()
{
    // @@protoc_insertion_point(message_clear_start:flash.FlashCmdPkt)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&type_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&attribute_) - reinterpret_cast<char*>(&type_)) +
                 sizeof(attribute_));
    _internal_metadata_.Clear();
}

bool FlashCmdPkt::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input)
{
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:flash.FlashCmdPkt)
    for (;;)
    {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag))
        {
            // .flash.PacketType type = 1;
            case 1: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */))
                {
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(input, &value)));
                    set_type(static_cast<::flash::PacketType>(value));
                }
                else
                {
                    goto handle_unusual;
                }
                break;
            }

            // bytes data = 2;
            case 2: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */))
                {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(input, this->mutable_data()));
                }
                else
                {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 attribute = 3;
            case 3: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */))
                {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        input, &attribute_)));
                }
                else
                {
                    goto handle_unusual;
                }
                break;
            }

            // bool cs = 4;
            case 4: {
                if (static_cast<::google::protobuf::uint8>(tag) ==
                    static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */))
                {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(input, &cs_)));
                }
                else
                {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0)
                {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(input, tag,
                                                                        _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:flash.FlashCmdPkt)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:flash.FlashCmdPkt)
    return false;
#undef DO_
}

void FlashCmdPkt::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const
{
    // @@protoc_insertion_point(serialize_start:flash.FlashCmdPkt)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // .flash.PacketType type = 1;
    if (this->type() != 0)
    {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(1, this->type(), output);
    }

    // bytes data = 2;
    if (this->data().size() > 0)
    {
        ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, this->data(), output);
    }

    // uint64 attribute = 3;
    if (this->attribute() != 0)
    {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->attribute(), output);
    }

    // bool cs = 4;
    if (this->cs() != 0)
    {
        ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->cs(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault()))
    {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields()
                                                                              : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:flash.FlashCmdPkt)
}

::google::protobuf::uint8* FlashCmdPkt::InternalSerializeWithCachedSizesToArray(bool deterministic,
                                                                                ::google::protobuf::uint8* target) const
{
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:flash.FlashCmdPkt)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // .flash.PacketType type = 1;
    if (this->type() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(1, this->type(), target);
    }

    // bytes data = 2;
    if (this->data().size() > 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(2, this->data(), target);
    }

    // uint64 attribute = 3;
    if (this->attribute() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->attribute(), target);
    }

    // bool cs = 4;
    if (this->cs() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->cs(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault()))
    {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields()
                                                                              : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:flash.FlashCmdPkt)
    return target;
}

size_t FlashCmdPkt::ByteSizeLong() const
{
    // @@protoc_insertion_point(message_byte_size_start:flash.FlashCmdPkt)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() && ::google::protobuf::internal::GetProto3PreserveUnknownsDefault()))
    {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((
            ::google::protobuf::internal::GetProto3PreserveUnknownsDefault() ? _internal_metadata_.unknown_fields()
                                                                             : _internal_metadata_.default_instance()));
    }
    // bytes data = 2;
    if (this->data().size() > 0)
    {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(this->data());
    }

    // .flash.PacketType type = 1;
    if (this->type() != 0)
    {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // bool cs = 4;
    if (this->cs() != 0)
    {
        total_size += 1 + 1;
    }

    // uint64 attribute = 3;
    if (this->attribute() != 0)
    {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->attribute());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    SetCachedSize(cached_size);
    return total_size;
}

void FlashCmdPkt::MergeFrom(const ::google::protobuf::Message& from)
{
    // @@protoc_insertion_point(generalized_merge_from_start:flash.FlashCmdPkt)
    GOOGLE_DCHECK_NE(&from, this);
    const FlashCmdPkt* source = ::google::protobuf::internal::DynamicCastToGenerated<const FlashCmdPkt>(&from);
    if (source == NULL)
    {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:flash.FlashCmdPkt)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    }
    else
    {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:flash.FlashCmdPkt)
        MergeFrom(*source);
    }
}

void FlashCmdPkt::MergeFrom(const FlashCmdPkt& from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:flash.FlashCmdPkt)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.data().size() > 0)
    {
        data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (from.type() != 0)
    {
        set_type(from.type());
    }
    if (from.cs() != 0)
    {
        set_cs(from.cs());
    }
    if (from.attribute() != 0)
    {
        set_attribute(from.attribute());
    }
}

void FlashCmdPkt::CopyFrom(const ::google::protobuf::Message& from)
{
    // @@protoc_insertion_point(generalized_copy_from_start:flash.FlashCmdPkt)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void FlashCmdPkt::CopyFrom(const FlashCmdPkt& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:flash.FlashCmdPkt)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool FlashCmdPkt::IsInitialized() const { return true; }

void FlashCmdPkt::Swap(FlashCmdPkt* other)
{
    if (other == this) return;
    InternalSwap(other);
}
void FlashCmdPkt::InternalSwap(FlashCmdPkt* other)
{
    using std::swap;
    data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    swap(type_, other->type_);
    swap(cs_, other->cs_);
    swap(attribute_, other->attribute_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlashCmdPkt::GetMetadata() const
{
    protobuf_flash_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_flash_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace flash
namespace google
{
namespace protobuf
{
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flash::FlashCmdPkt* Arena::CreateMaybeMessage<::flash::FlashCmdPkt>(Arena* arena)
{
    return Arena::CreateInternal<::flash::FlashCmdPkt>(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
